directories = {}
fileSizesSum = 0
tmpIndex = 0
for index,line in enumerate(input):
    lineContent = line.split(' ')
    if (lineContent[1].strip() == 'ls'):
        tmpIndex = index
        directories[tmpIndex] = []
    if (isInteger(lineContent[0])):
        directories[tmpIndex].append(int(lineContent[0]))

for directoryList in directories.values():
    if(sum(directoryList) <= 100000):
        print(sum(directoryList))
        fileSizesSum += sum(directoryList)

print(fileSizesSum)

# only works when condition is to count every file once
# challenge condition actually is: nested dirs are counted twice

#############################################
totalSum = 0
for directory, content of directories.items():
    dirSum = 0
    for item of content:
        if (type(item) == int):
            dirSum += item
        if (type(item) == string):


{'/': [14848514, 8504156], 'a': [29116, 2557, 62596], 'e': [584], 'd': [4060174, 8033020, 5626152, 7214296]}

# idea: replace strings in the value with the value of the dict key (in new dict)



# print(directories) # {'/': ['a', 14848514, 8504156, 'd'], 'a': ['e', 29116, 2557, 62596], 'e': [584], 'd': [4060174, 8033020, 5626152, 7214296]}
    directoriesClone = copy.deepcopy(directories)
    keepLooping = True
    while (keepLooping):
        keepLooping = (isDirectoryReplacementIncomplete(directories))
        for key, directory in directories.items():
            for entry in directory:
                if (entry in directories):
                    # if current entry is a key, replace it with with original entries value at that key
                    entryIndex = directory.index(entry)
                    directory[entryIndex] = directoriesClone[entry]
